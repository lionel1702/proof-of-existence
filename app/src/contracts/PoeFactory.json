{
  "contractName": "PoeFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userContracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"createContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getOwner()\":{\"details\":\"Returns the address of the current owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"pause()\":{\"details\":\"Called by a pauser to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"unpause()\":{\"details\":\"Called by a pauser to unpause, returns to normal state.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/mnt/c/Users/Legacy/Documents/Code/Ethereum/Consensys-Academy/checkpoints/proofOfExistence/contracts/PoeFactory.sol\":\"PoeFactory\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/mnt/c/Users/Legacy/Documents/Code/Ethereum/Consensys-Academy/checkpoints/proofOfExistence/contracts/Ownable.sol\":{\"keccak256\":\"0x1102376c35efafc8a864db93defaad34b0ece25d4972d45e68862c273c49b740\",\"urls\":[\"bzz-raw://22fce750fa87ea26b65a5a9a7565f0caf4951d7e747176a3a54eaca2e0367813\",\"dweb:/ipfs/QmW6fYoAjPLp8SAKKQCJzUxpMGvxXwSkCfqV5oSzfCWj92\"]},\"/mnt/c/Users/Legacy/Documents/Code/Ethereum/Consensys-Academy/checkpoints/proofOfExistence/contracts/Pausable.sol\":{\"keccak256\":\"0xa8a8e377c762d68fadd33725f43aeba2c6c307335cdd30882ad0bbe09b5745ca\",\"urls\":[\"bzz-raw://030b2413b0975aecce4e8e0d79781d3f5bb87688041b72a30d927f1d7790cc00\",\"dweb:/ipfs/QmWTTcPNGgqMPmqUMaKBK7iMuanfWvki62KsPoJ6Bvfrro\"]},\"/mnt/c/Users/Legacy/Documents/Code/Ethereum/Consensys-Academy/checkpoints/proofOfExistence/contracts/PoeFactory.sol\":{\"keccak256\":\"0x6b8026e9d7020dd9d5a62bd8ae8a58dd81ebea9e4eb1aadbd7e47a8533698a70\",\"urls\":[\"bzz-raw://b45332e81a30475a5f309fafa44d2adb9cdcb72e7a0956b4b3c462d0c59d3750\",\"dweb:/ipfs/QmQbRSCv84hmB1PdVdhxBVGMZoMxuYFRGP5JWSoWTkxum2\"]},\"/mnt/c/Users/Legacy/Documents/Code/Ethereum/Consensys-Academy/checkpoints/proofOfExistence/contracts/ProofOfExistence.sol\":{\"keccak256\":\"0xeb4b3512e40522d7b09817302036bef049dbb645db3c91fb20c8f827470d6a86\",\"urls\":[\"bzz-raw://71f692b45fe9a7a184e848bd6a7253df3942fb4ac771f523e9b4eac78d7a36b9\",\"dweb:/ipfs/QmaoUAJdP6jM2xvNdG9FofWYLbiKcaa9Wy3JxYVnHZywmo\"]}},\"version\":1}",
  "bytecode": "0x60806040526000339050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35060008060146101000a81548160ff021916908315150217905550611182806100ce6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635c975abb1161005b5780635c975abb1461011a5780638456cb591461013c578063893d20e8146101465780638f32d59b146101905761007d565b80630687b785146100825780633f4ba83a14610106578063412a5a6d14610110575b600080fd5b6100c46004803603602081101561009857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101b2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61010e6101e5565b005b610118610360565b005b61012261050f565b604051808215151515815260200191505060405180910390f35b610144610525565b005b61014e6106a2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101986106cb565b604051808215151515815260200191505060405180910390f35b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101ed6106cb565b61025f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600060149054906101000a900460ff166102e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610461576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f7573657220616c726561647920686173206120636f6e7472616374210000000081525060200191505060405180910390fd5b600060405161046f90610722565b604051809103906000f08015801561048b573d6000803e3d6000fd5b50905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060149054906101000a900460ff16905090565b61052d6106cb565b61059f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600060149054906101000a900460ff1615610622576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610a1e806107308339019056fe608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109be806100606000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630178fe3f14610051578063500b2432146101d75780635da40c47146102fa5780638da5cb5b14610318575b600080fd5b61007d6004803603602081101561006757600080fd5b8101908080359060200190929190505050610362565b60405180806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b838110156100cb5780820151818401526020810190506100b0565b50505050905090810190601f1680156100f85780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015610131578082015181840152602081019050610116565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b8381101561019757808201518184015260208101905061017c565b50505050905090810190601f1680156101c45780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b6102f8600480360360608110156101ed57600080fd5b810190808035906020019064010000000081111561020a57600080fd5b82018360208201111561021c57600080fd5b8035906020019184600183028401116401000000008311171561023e57600080fd5b90919293919293908035906020019064010000000081111561025f57600080fd5b82018360208201111561027157600080fd5b8035906020019184600183028401116401000000008311171561029357600080fd5b9091929391929390803590602001906401000000008111156102b457600080fd5b8201836020820111156102c657600080fd5b803590602001918460018302840111640100000000831117156102e857600080fd5b90919293919293905050506105a5565b005b6103026108b9565b6040518082815260200191505060405180910390f35b6103206108bf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b606080606060006001600086815260200190815260200160002060000160016000878152602001908152602001600020600101600160008881526020019081526020016000206002016001600089815260200190815260200160002060030154838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104575780601f1061042c57610100808354040283529160200191610457565b820191906000526020600020905b81548152906001019060200180831161043a57829003601f168201915b50505050509350828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104f35780601f106104c8576101008083540402835291602001916104f3565b820191906000526020600020905b8154815290600101906020018083116104d657829003601f168201915b50505050509250818054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561058f5780601f106105645761010080835404028352916020019161058f565b820191906000526020600020905b81548152906001019060200180831161057257829003601f168201915b5050505050915093509350935093509193509193565b6000868690501161061e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6465736372697074696f6e206d697373696e670000000000000000000000000081525060200191505060405180910390fd5b60008484905011610697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f68617368537472206d697373696e67000000000000000000000000000000000081525060200191505060405180910390fd5b604051806080016040528087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020014281525060016000600254815260200190815260200160002060008201518160000190805190602001906107b59291906108e4565b5060208201518160010190805190602001906107d29291906108e4565b5060408201518160020190805190602001906107ef9291906108e4565b50606082015181600301559050504282826040518083838082843780830192505050925050506040518091039020878760405180838380828437808301925050509250505060405180910390207fef38001ad07035c92bd04574ec422f5a2223e6dc30c59020a91cf0000d4214e8878760405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a4600260008154809291906001019190505550505050505050565b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061092557805160ff1916838001178555610953565b82800160010185558215610953579182015b82811115610952578251825591602001919060010190610937565b5b5090506109609190610964565b5090565b61098691905b8082111561098257600081600090555060010161096a565b5090565b9056fea265627a7a72315820a1fd7e4380a91ddb45b73e3cccf0426cd280be767fccaa7d92a3fcc9de2b96f964736f6c634300050c0032a265627a7a7231582010a51108e793ea8bcc18e0f1fe1c4ae7422147a130e30481fba9b10f6c9ecda664736f6c634300050c0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80635c975abb1161005b5780635c975abb1461011a5780638456cb591461013c578063893d20e8146101465780638f32d59b146101905761007d565b80630687b785146100825780633f4ba83a14610106578063412a5a6d14610110575b600080fd5b6100c46004803603602081101561009857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101b2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61010e6101e5565b005b610118610360565b005b61012261050f565b604051808215151515815260200191505060405180910390f35b610144610525565b005b61014e6106a2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101986106cb565b604051808215151515815260200191505060405180910390f35b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101ed6106cb565b61025f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600060149054906101000a900460ff166102e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610461576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f7573657220616c726561647920686173206120636f6e7472616374210000000081525060200191505060405180910390fd5b600060405161046f90610722565b604051809103906000f08015801561048b573d6000803e3d6000fd5b50905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060149054906101000a900460ff16905090565b61052d6106cb565b61059f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600060149054906101000a900460ff1615610622576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610a1e806107308339019056fe608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109be806100606000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630178fe3f14610051578063500b2432146101d75780635da40c47146102fa5780638da5cb5b14610318575b600080fd5b61007d6004803603602081101561006757600080fd5b8101908080359060200190929190505050610362565b60405180806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b838110156100cb5780820151818401526020810190506100b0565b50505050905090810190601f1680156100f85780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015610131578082015181840152602081019050610116565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b8381101561019757808201518184015260208101905061017c565b50505050905090810190601f1680156101c45780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b6102f8600480360360608110156101ed57600080fd5b810190808035906020019064010000000081111561020a57600080fd5b82018360208201111561021c57600080fd5b8035906020019184600183028401116401000000008311171561023e57600080fd5b90919293919293908035906020019064010000000081111561025f57600080fd5b82018360208201111561027157600080fd5b8035906020019184600183028401116401000000008311171561029357600080fd5b9091929391929390803590602001906401000000008111156102b457600080fd5b8201836020820111156102c657600080fd5b803590602001918460018302840111640100000000831117156102e857600080fd5b90919293919293905050506105a5565b005b6103026108b9565b6040518082815260200191505060405180910390f35b6103206108bf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b606080606060006001600086815260200190815260200160002060000160016000878152602001908152602001600020600101600160008881526020019081526020016000206002016001600089815260200190815260200160002060030154838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104575780601f1061042c57610100808354040283529160200191610457565b820191906000526020600020905b81548152906001019060200180831161043a57829003601f168201915b50505050509350828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104f35780601f106104c8576101008083540402835291602001916104f3565b820191906000526020600020905b8154815290600101906020018083116104d657829003601f168201915b50505050509250818054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561058f5780601f106105645761010080835404028352916020019161058f565b820191906000526020600020905b81548152906001019060200180831161057257829003601f168201915b5050505050915093509350935093509193509193565b6000868690501161061e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6465736372697074696f6e206d697373696e670000000000000000000000000081525060200191505060405180910390fd5b60008484905011610697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f68617368537472206d697373696e67000000000000000000000000000000000081525060200191505060405180910390fd5b604051806080016040528087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020014281525060016000600254815260200190815260200160002060008201518160000190805190602001906107b59291906108e4565b5060208201518160010190805190602001906107d29291906108e4565b5060408201518160020190805190602001906107ef9291906108e4565b50606082015181600301559050504282826040518083838082843780830192505050925050506040518091039020878760405180838380828437808301925050509250505060405180910390207fef38001ad07035c92bd04574ec422f5a2223e6dc30c59020a91cf0000d4214e8878760405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a4600260008154809291906001019190505550505050505050565b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061092557805160ff1916838001178555610953565b82800160010185558215610953579182015b82811115610952578251825591602001919060010190610937565b5b5090506109609190610964565b5090565b61098691905b8082111561098257600081600090555060010161096a565b5090565b9056fea265627a7a72315820a1fd7e4380a91ddb45b73e3cccf0426cd280be767fccaa7d92a3fcc9de2b96f964736f6c634300050c0032a265627a7a7231582010a51108e793ea8bcc18e0f1fe1c4ae7422147a130e30481fba9b10f6c9ecda664736f6c634300050c0032",
  "sourceMap": "84:422:3:-;;;340:17:1;360:10;340:30;;389:9;380:6;;:18;;;;;;;;;;;;;;;;;;446:9;413:43;;442:1;413:43;;;;;;;;;;;;306:157;1009:5:2;999:7;;:15;;;;;;;;;;;;;;;;;;84:422:3;;;;;;",
  "deployedSourceMap": "84:422:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;84:422:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;122:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;122:48:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1875:114:2;;;:::i;:::-;;177:327:3;;;:::i;:::-;;1116:76:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1673:112;;;:::i;:::-;;539:80:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;893:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;122:48:3;;;;;;;;;;;;;;;;;;;;;;:::o;1875:114:2:-;746:9:1;:7;:9::i;:::-;738:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1536:7:2;;;;;;;;;;;1528:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1942:5;1932:7;;:15;;;;;;;;;;;;;;;;;;1962:20;1971:10;1962:20;;;;;;;;;;;;;;;;;;;;;;1875:114::o;177:327:3:-;267:1;230:39;;:13;:25;244:10;230:25;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;222:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;386:28;417:22;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;417:22:3;386:53;;485:11;449:13;:25;463:10;449:25;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;177:327;:::o;1116:76:2:-;1155:4;1178:7;;;;;;;;;;;1171:14;;1116:76;:::o;1673:112::-;746:9:1;:7;:9::i;:::-;738:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:7:2;;;;;;;;;;;1344:8;1336:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1741:4;1731:7;;:14;;;;;;;;;;;;;;;;;;1760:18;1767:10;1760:18;;;;;;;;;;;;;;;;;;;;;;1673:112::o;539:80:1:-;580:7;606:6;;;;;;;;;;;599:13;;539:80;:::o;893:90::-;933:4;970:6;;;;;;;;;;;956:20;;:10;:20;;;949:27;;893:90;:::o;84:422:3:-;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./Pausable.sol\";\nimport \"./ProofOfExistence.sol\";\n\ncontract PoeFactory is Pausable {\n    mapping(address => address) public userContracts;\n\n    function createContract() external {\n        require(userContracts[msg.sender] == address(0), \"user already has a contract!\");\n        // TODO: second check to make sure contract didn't self destruct\n\n        ProofOfExistence newContract = new ProofOfExistence();\n        userContracts[msg.sender] = address(newContract);\n    }\n}\n",
  "sourcePath": "/mnt/c/Users/Legacy/Documents/Code/Ethereum/Consensys-Academy/checkpoints/proofOfExistence/contracts/PoeFactory.sol",
  "ast": {
    "absolutePath": "/mnt/c/Users/Legacy/Documents/Code/Ethereum/Consensys-Academy/checkpoints/proofOfExistence/contracts/PoeFactory.sol",
    "exportedSymbols": {
      "PoeFactory": [
        243
      ]
    },
    "id": 244,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 203,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/mnt/c/Users/Legacy/Documents/Code/Ethereum/Consensys-Academy/checkpoints/proofOfExistence/contracts/Pausable.sol",
        "file": "./Pausable.sol",
        "id": 204,
        "nodeType": "ImportDirective",
        "scope": 244,
        "sourceUnit": 202,
        "src": "25:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/mnt/c/Users/Legacy/Documents/Code/Ethereum/Consensys-Academy/checkpoints/proofOfExistence/contracts/ProofOfExistence.sol",
        "file": "./ProofOfExistence.sol",
        "id": 205,
        "nodeType": "ImportDirective",
        "scope": 244,
        "sourceUnit": 368,
        "src": "50:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 206,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 201,
              "src": "107:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$201",
                "typeString": "contract Pausable"
              }
            },
            "id": 207,
            "nodeType": "InheritanceSpecifier",
            "src": "107:8:3"
          }
        ],
        "contractDependencies": [
          116,
          201,
          367
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 243,
        "linearizedBaseContracts": [
          243,
          201,
          116
        ],
        "name": "PoeFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 211,
            "name": "userContracts",
            "nodeType": "VariableDeclaration",
            "scope": 243,
            "src": "122:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 210,
              "keyType": {
                "id": 208,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "130:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "122:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 209,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "141:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "212:292:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 215,
                            "name": "userContracts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "230:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 218,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 216,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "244:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "244:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "230:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "267:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "259:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "259:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "230:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7573657220616c726561647920686173206120636f6e747261637421",
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "271:30:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f8909d2192d1c333228a7d3c0059ba1562a83b59002d23d4e2d73647cc560b6",
                          "typeString": "literal_string \"user already has a contract!\""
                        },
                        "value": "user already has a contract!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f8909d2192d1c333228a7d3c0059ba1562a83b59002d23d4e2d73647cc560b6",
                          "typeString": "literal_string \"user already has a contract!\""
                        }
                      ],
                      "id": 214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        385,
                        386
                      ],
                      "referencedDeclaration": 386,
                      "src": "222:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "222:80:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "222:80:3"
                },
                {
                  "assignments": [
                    227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 227,
                      "name": "newContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 241,
                      "src": "386:28:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ProofOfExistence_$367",
                        "typeString": "contract ProofOfExistence"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 226,
                        "name": "ProofOfExistence",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 367,
                        "src": "386:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProofOfExistence_$367",
                          "typeString": "contract ProofOfExistence"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 231,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "417:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ProofOfExistence_$367_$",
                        "typeString": "function () returns (contract ProofOfExistence)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 228,
                        "name": "ProofOfExistence",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 367,
                        "src": "421:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProofOfExistence_$367",
                          "typeString": "contract ProofOfExistence"
                        }
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "417:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ProofOfExistence_$367",
                      "typeString": "contract ProofOfExistence"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "386:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 232,
                        "name": "userContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "449:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 235,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 233,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 382,
                          "src": "463:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "463:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "449:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 237,
                          "name": "newContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 227,
                          "src": "485:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ProofOfExistence_$367",
                            "typeString": "contract ProofOfExistence"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ProofOfExistence_$367",
                            "typeString": "contract ProofOfExistence"
                          }
                        ],
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "477:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "477:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "449:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "449:48:3"
                }
              ]
            },
            "documentation": null,
            "id": 242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "200:2:3"
            },
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "212:0:3"
            },
            "scope": 243,
            "src": "177:327:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 244,
        "src": "84:422:3"
      }
    ],
    "src": "0:507:3"
  },
  "legacyAST": {
    "absolutePath": "/mnt/c/Users/Legacy/Documents/Code/Ethereum/Consensys-Academy/checkpoints/proofOfExistence/contracts/PoeFactory.sol",
    "exportedSymbols": {
      "PoeFactory": [
        243
      ]
    },
    "id": 244,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 203,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/mnt/c/Users/Legacy/Documents/Code/Ethereum/Consensys-Academy/checkpoints/proofOfExistence/contracts/Pausable.sol",
        "file": "./Pausable.sol",
        "id": 204,
        "nodeType": "ImportDirective",
        "scope": 244,
        "sourceUnit": 202,
        "src": "25:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/mnt/c/Users/Legacy/Documents/Code/Ethereum/Consensys-Academy/checkpoints/proofOfExistence/contracts/ProofOfExistence.sol",
        "file": "./ProofOfExistence.sol",
        "id": 205,
        "nodeType": "ImportDirective",
        "scope": 244,
        "sourceUnit": 368,
        "src": "50:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 206,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 201,
              "src": "107:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$201",
                "typeString": "contract Pausable"
              }
            },
            "id": 207,
            "nodeType": "InheritanceSpecifier",
            "src": "107:8:3"
          }
        ],
        "contractDependencies": [
          116,
          201,
          367
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 243,
        "linearizedBaseContracts": [
          243,
          201,
          116
        ],
        "name": "PoeFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 211,
            "name": "userContracts",
            "nodeType": "VariableDeclaration",
            "scope": 243,
            "src": "122:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 210,
              "keyType": {
                "id": 208,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "130:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "122:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 209,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "141:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "212:292:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 215,
                            "name": "userContracts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "230:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 218,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 216,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "244:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "244:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "230:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "267:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "259:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "259:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "230:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7573657220616c726561647920686173206120636f6e747261637421",
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "271:30:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f8909d2192d1c333228a7d3c0059ba1562a83b59002d23d4e2d73647cc560b6",
                          "typeString": "literal_string \"user already has a contract!\""
                        },
                        "value": "user already has a contract!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f8909d2192d1c333228a7d3c0059ba1562a83b59002d23d4e2d73647cc560b6",
                          "typeString": "literal_string \"user already has a contract!\""
                        }
                      ],
                      "id": 214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        385,
                        386
                      ],
                      "referencedDeclaration": 386,
                      "src": "222:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "222:80:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "222:80:3"
                },
                {
                  "assignments": [
                    227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 227,
                      "name": "newContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 241,
                      "src": "386:28:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ProofOfExistence_$367",
                        "typeString": "contract ProofOfExistence"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 226,
                        "name": "ProofOfExistence",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 367,
                        "src": "386:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProofOfExistence_$367",
                          "typeString": "contract ProofOfExistence"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 231,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "417:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ProofOfExistence_$367_$",
                        "typeString": "function () returns (contract ProofOfExistence)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 228,
                        "name": "ProofOfExistence",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 367,
                        "src": "421:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProofOfExistence_$367",
                          "typeString": "contract ProofOfExistence"
                        }
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "417:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ProofOfExistence_$367",
                      "typeString": "contract ProofOfExistence"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "386:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 232,
                        "name": "userContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "449:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 235,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 233,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 382,
                          "src": "463:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "463:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "449:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 237,
                          "name": "newContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 227,
                          "src": "485:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ProofOfExistence_$367",
                            "typeString": "contract ProofOfExistence"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ProofOfExistence_$367",
                            "typeString": "contract ProofOfExistence"
                          }
                        ],
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "477:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "477:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "449:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "449:48:3"
                }
              ]
            },
            "documentation": null,
            "id": 242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "200:2:3"
            },
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "212:0:3"
            },
            "scope": 243,
            "src": "177:327:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 244,
        "src": "84:422:3"
      }
    ],
    "src": "0:507:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.20",
  "updatedAt": "2020-01-10T19:00:40.350Z",
  "devdoc": {
    "methods": {
      "getOwner()": {
        "details": "Returns the address of the current owner."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "pause()": {
        "details": "Called by a pauser to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "unpause()": {
        "details": "Called by a pauser to unpause, returns to normal state."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}